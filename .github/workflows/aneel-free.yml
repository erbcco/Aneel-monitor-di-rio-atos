name: Monitoramento ANEEL

on:
  schedule:
    - cron: '0 12 * * 1-5'  # Segunda a sexta às 9:00 BRT (12:00 UTC)
  workflow_dispatch:  # Permite execução manual

permissions:
  contents: write

jobs:
  monitoramento:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Executar monitoramento
        run: python seu_script.py

      - name: Upload do arquivo HTML
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: arquivos-html
          path: 'pagina_resultados_*.html'

      - name: 🐍 Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 📦 Instalar dependências gratuitas
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 lxml
      - name: 🔍 Executar monitoramento ANEEL
        env:
          GMAIL_USER: ${{ secrets.GMAIL_USER }}
          GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
          EMAIL_DESTINATARIO: ${{ secrets.EMAIL_DESTINATARIO }}
        run: |
          python scraper_aneel_free.py
      - name: 💾 Salvar resultados
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "ANEEL Monitor Bot"
          if [ -f "resultados_aneel.json" ]; then
            git add resultados_aneel.json
            git diff --quiet && git diff --staged --quiet || \
              git commit -m "📊 Resultados ANEEL $(date +'%Y-%m-%d %H:%M') [skip ci]"
            git push || echo "Nada para commitar"
          fi
      - name: 📤 Upload resultados como artifact
        uses: actions/upload-artifact@v3
        with:
          name: aneel-results-${{ github.run_number }}
          path: resultados_aneel.json
          retention-days: 30
        if: always()

      - name: 📊 Mostrar estatísticas
        run: |
          python -c "import json; f=open('resultados_aneel.json','r',encoding='utf-8'); data=json.load(f); f.close(); stats=data['estatisticas']; print(f'✅ Execução concluída em: {stats[\"data_execucao\"]}'); print(f'🔍 Termos buscados: {stats[\"total_termos_buscados\"]}'); print(f'📄 Documentos encontrados: {stats[\"total_documentos_encontrados\"]}'); print(f'🎯 Documentos relevantes: {stats[\"documentos_relevantes\"]}'); print('📊 Por categoria:'); [print(f\"  • {cat}: {num}\") for cat, num in stats[\"documentos_por_categoria\"].items()]"
